{"version":3,"sources":["theme/index.js","components/MuseumsList.js","components/Chart.js","components/NuitDesMusees.js","components/Homepage.js","components/MuseumDetails.js","App.js","serviceWorker.js","index.js"],"names":["color","primary","secondary","MuseumsList","props","Box","styled","div","Title","h2","StyledLine","lineStyle","Cell","useState","fields","nom_du_musee","region","ville","telephonel","siteweb","data","setData","fetchData","a","axios","response","records","useEffect","map","elt","to","recordid","key","style","textDecoration","telephone1","sitweb","Chart","chartConfig","type","labels","datasets","label","counts","options","chartContainer","useRef","setChartInstance","current","newChartInstance","Chartjs","ref","NuitDesMusees","setLabels","setCounts","fetchEvents","events","facet_groups","facets","name","count","console","log","Wrapper","boxStyle","Homepage","MuseumDetails","adr","departement","match","museumId","params","museum","find","fetchMuseumData","h1","Block","Container","App","theme","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gNAAe,GACbA,MAAO,CACLC,QAAS,UACTC,UAAW,Y,otBCEf,IA2DeC,EA3DK,SAACC,GACjB,IAAMC,EAAMC,IAAOC,IAAV,KAMHC,EAAQF,IAAOG,GAAV,KAGLC,EAAaJ,IAAOC,IAAV,KAIG,SAAAH,GAAK,OAAIA,EAAMO,WAAa,YAIzCC,EAAON,IAAOC,IAAV,KAlBiB,EAwBHM,mBADJ,CAAC,CAACC,OAAO,CAACC,aAAa,GAAIC,OAAO,GAAIC,MAAM,GAAIC,WAAW,GAAIC,QAAQ,OAvBhE,mBAwBpBC,EAxBoB,KAwBdC,EAxBc,KA0BrBC,EAAS,uCAAG,4BAAAC,EAAA,4DACF,4IADE,SAEOC,IADT,6IADE,OAEVC,EAFU,OAGdJ,EAAQI,EAASL,KAAKM,SAHR,2CAAH,qDAUf,OAJAC,qBAAU,WACNL,MACD,IAGC,kBAACjB,EAAD,KACI,kBAACG,EAAD,4BACA,kBAACE,EAAD,CAAYC,UAAU,QAClB,kBAACC,EAAD,wBACA,kBAACA,EAAD,cACA,kBAACA,EAAD,wBACA,kBAACA,EAAD,kBAEHQ,EAAKQ,KAAI,SAAAC,GACN,OAAO,kBAAC,IAAD,CAAMC,GAAE,mBAAcD,EAAIE,UAAYC,IAAKH,EAAIE,SAAUE,MAAO,CAAEC,eAAgB,SACrF,kBAACxB,EAAD,KACI,kBAACE,EAAD,KAAOiB,EAAIf,OAAOC,cAClB,kBAACH,EAAD,KAAOiB,EAAIf,OAAOG,OAClB,kBAACL,EAAD,KAAOiB,EAAIf,OAAOqB,YAClB,kBAACvB,EAAD,KAAOiB,EAAIf,OAAOsB,e,iBCnB3BC,EAjCD,SAACjC,GAEb,IAAMkC,EAAc,CAClBC,KAAM,MACNnB,KAAM,CACFoB,OAAQpC,EAAMoC,OACdC,SAAU,CAAC,CACPC,MAAO,iCACPtB,KAAMhB,EAAMuC,UAGpBC,QAAS,IAKLC,EAAiBC,iBAAO,MAhBP,EAiBmBjC,mBAAS,MAjB5B,mBAiBDkC,GAjBC,WA0BvB,OAPApB,qBAAU,WACR,GAAIkB,GAAkBA,EAAeG,QAAS,CAC5C,IAAMC,EAAmB,IAAIC,IAAQL,EAAeG,QAASV,GAC7DS,EAAiBE,MAElB,CAACJ,IAGF,6BACE,4BAAQM,IAAKN,M,seC3BnB,IAkDeO,EAlDO,SAAChD,GAAW,IAAD,EACFS,mBAAS,IADP,mBACtB2B,EADsB,KACda,EADc,OAEFxC,mBAAS,IAFP,mBAEtB8B,EAFsB,KAEdW,EAFc,KAIvBC,EAAW,uCAAG,8BAAAhC,EAAA,4DACJ,oGADI,SAEKC,IADT,qGADI,OAEZC,EAFY,OAGZ+B,EAAS/B,EAASL,KAAKqC,aAAa,GAAGC,OAE3CL,EAAUG,EAAO5B,KAAI,SAAAC,GAAG,OAAIA,EAAI8B,SAChCL,EAAUE,EAAO5B,KAAI,SAAAC,GAAG,OAAIA,EAAI+B,UAChCC,QAAQC,IAAI,SAAUN,GAPN,2CAAH,qDAWjB7B,qBAAU,WACN4B,MACD,IAEH,IAAMQ,EAAUzD,IAAOC,IAAV,KAMPF,EAAMC,IAAOC,IAAV,KAIY,SAAAH,GAAK,OAAIA,EAAM4D,UAAY,SAI1CxD,EAAQF,IAAOG,GAAV,KAIX,OACI,kBAACsD,EAAD,KACI,kBAAC1D,EAAD,CAAK2D,SAAS,QACV,kBAACxD,EAAD,4CACA,kBAAC,EAAD,CAAOgC,OAAQA,EAAQG,OAAQA,KAEnC,kBAACtC,EAAD,KACI,kBAACG,EAAD,2C,2IC5ChB,IAceyD,EAdE,SAAC7D,GACd,IAAMC,EAAMC,IAAOC,IAAV,KAKT,OACI,kBAACF,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,sqBCVV,IAsFe6D,EAtFO,SAAC9D,GACnB,IAD6B,EAULS,mBATJ,CAChBE,aAAa,GACboD,IAAI,GACJlD,MAAM,GACND,OAAO,GACPoD,YAAY,GACZjC,WAAW,GACXC,OAAO,KARkB,mBAUtBhB,EAVsB,KAUhBC,EAVgB,KAY7BM,qBAAU,YACe,uCAAG,gCAAAJ,EAAA,4DACR,4IADQ,SAECC,IADT,6IADQ,OAEhBC,EAFgB,OAGhBrB,EAAMiE,QACEC,EAAalE,EAAMiE,MAAME,OAAzBD,SACFE,EAAS/C,EAASL,KAAKM,QAAQ+C,MAAK,SAAA5C,GAAG,OAAIA,EAAIE,WAAauC,KAClET,QAAQC,IAAI,iBAAkBU,EAAO1D,QACrCO,EAAQmD,EAAO1D,SAPC,2CAAH,qDAUrB4D,KACD,IAEH,IAAMlE,EAAQF,IAAOqE,GAAV,KAMLtE,EAAMC,IAAOC,IAAV,KAUHG,EAAaJ,IAAOC,IAAV,KAIVqE,EAAQtE,IAAOC,IAAV,KAGX,OACI,6BACI,kBAACC,EAAD,KAAQY,EAAKL,cACb,kBAACV,EAAD,KACI,kBAACK,EAAD,KACI,kBAACkE,EAAD,KACI,uCACA,2BAAIxD,EAAK+C,MAEb,kBAACS,EAAD,KACI,qCACA,2BAAIxD,EAAKH,QAEb,kBAAC2D,EAAD,KACI,8CACA,2BAAIxD,EAAKgD,cAEb,kBAACQ,EAAD,KACI,yCACA,2BAAIxD,EAAKJ,UAGjB,kBAACN,EAAD,KACI,kBAACkE,EAAD,KACI,+CACA,2BAAIxD,EAAKe,aAEb,kBAACyC,EAAD,KACI,wCACA,2BAAIxD,EAAKgB,a,0aC1EjC,IAAMyC,EAAYvE,IAAOC,IAAV,KAUTF,EAAMC,IAAOC,IAAV,KA0BMuE,MAjBf,WACE,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAeC,MAAOA,GACpB,kBAACF,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjC,kBAAC,IAAD,CAAOgB,KAAK,qBAAqBC,UAAWhB,UCvBpCiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCbNkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.69e5f125.chunk.js","sourcesContent":["export default {\n  color: {\n    primary: \"#2C2E7B\",\n    secondary: \"#E66E6E\",\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nconst MuseumsList = (props) => {\n    const Box = styled.div`\n        border-radius: 10px;\n        background: white;\n        padding: 0 15px 10px;\n        width:60%;\n    `\n    const Title = styled.h2`\n        color:#6b6ecf\n    `\n    const StyledLine = styled.div`\n        display:flex;\n        border-bottom: 1px #acacac solid;\n        padding: 10px 0;\n        font-weight: ${props => props.lineStyle || \"normal\"};\n        color: black;\n    `\n\n    const Cell = styled.div`\n        width: 25%;\n        padding: 0 5px;\n        word-break: break-all;\n    `\n    const initialData = [{fields:{nom_du_musee:\"\", region:\"\", ville:\"\", telephonel:\"\", siteweb:\"\"}}];\n    const [data, setData] = useState(initialData);\n\n    const fetchData = async () =>{\n        const url = 'https://data.culture.gouv.fr/api/records/1.0/search/?dataset=liste-et-localisation-des-musees-de-france&q=&facet=region&facet=departement';\n        let response = await axios(url)\n        setData(response.data.records);\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, []);\n    \n    return(\n        <Box>\n            <Title>Liste des Musées</Title>\n            <StyledLine lineStyle=\"bold\">\n                <Cell>Nom du musée</Cell>\n                <Cell>Ville</Cell>\n                <Cell>Téléphone</Cell>  \n                <Cell>Site web</Cell> \n            </StyledLine>\n            {data.map(elt =>{\n                return <Link to={`/museums/${elt.recordid}`} key={elt.recordid} style={{ textDecoration: 'none' }}>\n                    <StyledLine>\n                        <Cell>{elt.fields.nom_du_musee}</Cell>\n                        <Cell>{elt.fields.ville}</Cell>\n                        <Cell>{elt.fields.telephone1}</Cell>  \n                        <Cell>{elt.fields.sitweb}</Cell>                   \n                    </StyledLine>\n                </Link>\n            })}\n        </Box>\n    )\n}\n\nexport default MuseumsList;","import React, { useState, useEffect, useRef } from 'react';\nimport Chartjs from 'chart.js';\n\n\nconst Chart = (props) => {\n\n  const chartConfig = {\n    type: 'bar',\n    data: {\n        labels: props.labels,\n        datasets: [{\n            label: 'Évènements par Région',\n            data: props.counts\n        }]\n    },\n    options: {\n      //...\n    }\n};\n\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  return (\n    <div>\n      <canvas ref={chartContainer} />\n    </div>\n  );\n};\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport Chart from 'components/Chart';\n\nconst NuitDesMusees = (props) => {\n    const [labels, setLabels]= useState([]);\n    const [counts, setCounts] =useState([]);\n\n    const fetchEvents = async () =>{\n        const url = 'https://data.culture.gouv.fr/api/records/1.0/search/?dataset=nuit-des-musees-2018&q=&facet=region';\n        let response = await axios(url);\n        let events = response.data.facet_groups[0].facets;\n        // const labels = \n        setLabels(events.map(elt => elt.name));\n        setCounts(events.map(elt => elt.count))\n        console.log(\"EVENTS\", events); \n        \n    }\n\n    useEffect(() => {\n        fetchEvents()\n    }, []);\n\n    const Wrapper = styled.div`\n        display:flex;\n        flex-direction: column;\n        width: 35%;\n    `\n\n    const Box = styled.div`\n        border-radius: 10px;\n        background: white;\n        padding: 0 15px 10px;\n        margin-bottom: ${props => props.boxStyle || \"0px\"};\n        width:100%;\n        height: 50%;\n    `\n    const Title = styled.h2`\n        color:#6b6ecf\n    `\n    \n    return(\n        <Wrapper>\n            <Box boxStyle=\"50px\">\n                <Title>Nuit des musées 2018 (graphique)</Title>\n                <Chart labels={labels} counts={counts}/>\n            </Box>\n            <Box>\n                <Title>Nuit des musées 2018 (carte)</Title>\n            </Box>\n        </Wrapper>\n    )\n}\n\nexport default NuitDesMusees;","import React from 'react';\nimport styled from 'styled-components';\nimport MuseumsList from 'components/MuseumsList';\nimport NuitDesMusees from 'components/NuitDesMusees';\n\nconst Homepage = (props) => {\n    const Box = styled.div`\n        display: flex;\n        justify-content: space-around;\n    `\n    \n    return(\n        <Box>\n          <MuseumsList/>\n          <NuitDesMusees />\n        </Box>\n    )\n}\n\nexport default Homepage;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst MuseumDetails = (props) => {\n    const initialData = {\n        nom_du_musee:\"\", \n        adr:\"\", \n        ville:\"\", \n        region:\"\", \n        departement:\"\", \n        telephone1:\"\",\n        sitweb:\"\"\n    }\n    const [data, setData] = useState(initialData);\n\n    useEffect(() => {\n        const fetchMuseumData = async () =>{\n            const url = 'https://data.culture.gouv.fr/api/records/1.0/search/?dataset=liste-et-localisation-des-musees-de-france&q=&facet=region&facet=departement';\n            let response = await axios(url);\n            if (props.match){\n                const { museumId } = props.match.params;\n                const museum = response.data.records.find(elt => elt.recordid === museumId );\n                console.log(\"Museum details\", museum.fields);\n                setData(museum.fields);\n            }\n        }\n        fetchMuseumData()\n    }, []);\n\n    const Title = styled.h1`\n        color: #6b6ecf;\n        margin-left: 20px;\n        margin-right: 20px;\n    `\n\n    const Box = styled.div`\n        background-color: white;\n        border-radius: 10px;\n        min-height: 80vh;\n        margin: 0 20px;\n        padding-top: 30px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    `\n    const StyledLine = styled.div`\n        display:flex;\n        width: 80%;\n    `\n    const Block = styled.div`\n        width: 25%;\n    `\n    return(\n        <div>\n            <Title>{data.nom_du_musee}</Title>\n            <Box>\n                <StyledLine>\n                    <Block>\n                        <h3>Adresse</h3>\n                        <p>{data.adr}</p>\n                    </Block>\n                    <Block>\n                        <h3>Ville</h3>\n                        <p>{data.ville}</p>\n                    </Block>\n                    <Block>\n                        <h3>Département</h3>\n                        <p>{data.departement}</p>\n                    </Block>\n                    <Block>\n                        <h3>Région</h3>\n                        <p>{data.region}</p>\n                    </Block>  \n                </StyledLine>\n                <StyledLine>\n                    <Block>\n                        <h3>Téléphone</h3>\n                        <p>{data.telephone1}</p>\n                    </Block>\n                    <Block>\n                        <h3>Site web</h3>\n                        <p>{data.sitweb}</p>\n                    </Block> \n                </StyledLine>\n            </Box>\n        </div>\n    )\n}\n\nexport default MuseumDetails;","import React from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme/\";\nimport \"./theme/baseline.css\";\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Homepage from 'components/Homepage';\nimport MuseumDetails from 'components/MuseumDetails';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-left: 32px;\n  padding-right: 32px;\n  max-width: 1280px;\n  margin: auto;\n`\n\nconst Box = styled.div`\n  flex:1;\n  border-radius: 5px;\n  background: #e7e7e7;\n  white-space: pre-line;\n  padding: 15px 5px;\n  min-height: 100vh;\n`\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Box>\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route path=\"/museums/:museumId\" component={MuseumDetails} />\n          </Switch>\n        </Box>\n      </Container>\n    </ThemeProvider>    \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}